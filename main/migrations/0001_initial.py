# Generated by Django 5.1.3 on 2025-04-29 10:08

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('picture', models.ImageField(upload_to='achievement_image', verbose_name='Изображение')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=60, verbose_name='Адрес')),
                ('description', models.TextField(max_length=600, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'заведениe',
                'verbose_name_plural': 'заведения',
                'ordering': ['address'],
            },
        ),
        migrations.CreateModel(
            name='Shaurma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('compound', models.TextField(max_length=600, verbose_name='Состав')),
                ('description', models.TextField(max_length=600, verbose_name='Описание')),
                ('picture', models.ImageField(upload_to='shaurma_images', verbose_name='Изображение')),
                ('price', models.PositiveSmallIntegerField(verbose_name='Цена в ₽')),
                ('weight', models.PositiveSmallIntegerField(verbose_name='Вес в гр')),
            ],
            options={
                'verbose_name': 'шаурма',
                'verbose_name_plural': 'шаурма',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=60, unique=True, verbose_name='Юзернейм')),
                ('picture', models.ImageField(upload_to='user_images', verbose_name='Изображение')),
                ('email', models.EmailField(max_length=80)),
                ('number', models.CharField(max_length=12, verbose_name='Номер')),
                ('last_address', models.CharField(max_length=200, verbose_name='Адрес последней доставки')),
                ('reg_date', models.DateTimeField(auto_now_add=True)),
                ('is_open', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Имя')),
                ('text', models.TextField(max_length=600, verbose_name='Текст отзыва')),
                ('stars', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка')),
                ('date', models.CharField(max_length=30, verbose_name='Дата/Время записи')),
                ('shaurma', models.ForeignKey(default=3, on_delete=django.db.models.deletion.PROTECT, to='main.shaurma', verbose_name='Шаурма')),
            ],
            options={
                'verbose_name': 'отзыв',
                'verbose_name_plural': 'отзывы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('shaurma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.shaurma', verbose_name='Шаурма')),
            ],
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('get_date', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.achievement', verbose_name='Достижение')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
    ]
