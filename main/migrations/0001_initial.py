# Generated by Django 5.2.1 on 2025-05-20 06:05

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('picture', models.ImageField(upload_to='achievement_image', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'достижение',
                'verbose_name_plural': 'достижения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=60, verbose_name='Адрес')),
                ('description', models.TextField(max_length=600, verbose_name='Описание')),
                ('picture', models.ImageField(upload_to='locations', verbose_name='Изображение')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('contacts', models.CharField(max_length=18, verbose_name='Номер')),
                ('city', models.CharField(max_length=30, verbose_name='Город')),
                ('open_hours', models.TimeField(verbose_name='Начало')),
                ('close_hours', models.TimeField(verbose_name='Конец')),
            ],
            options={
                'verbose_name': 'заведениe',
                'verbose_name_plural': 'заведения',
                'ordering': ['address'],
            },
        ),
        migrations.CreateModel(
            name='Promocode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_name', models.CharField(max_length=20, unique=True, verbose_name='Промокод')),
                ('code_uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='Промокод UUID')),
                ('duration', models.SmallIntegerField(default=7, verbose_name='Время жизни ( в днях )')),
                ('discount', models.SmallIntegerField(default=5, verbose_name='Скидка в %')),
                ('date_add', models.DateField(verbose_name='Дата создания')),
                ('date_end', models.DateField(blank=True, editable=False, null=True, verbose_name='Дата конца')),
            ],
            options={
                'verbose_name': 'промокод',
                'verbose_name_plural': 'промокоды',
                'ordering': ['-date_end'],
            },
        ),
        migrations.CreateModel(
            name='Shaurma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=70, verbose_name='URL-адрес')),
                ('compound', models.TextField(max_length=600, verbose_name='Состав')),
                ('short_text', models.TextField(blank=True, max_length=200, verbose_name='Краткое описание')),
                ('description', models.TextField(blank=True, max_length=1000, verbose_name='Описание')),
                ('picture', models.ImageField(upload_to='shaurma_images', verbose_name='Изображение')),
                ('price', models.PositiveSmallIntegerField(verbose_name='Цена в ₽')),
                ('weight', models.PositiveSmallIntegerField(verbose_name='Вес в гр')),
                ('calories', models.PositiveIntegerField(default=0, verbose_name='Калории (ккал)')),
                ('proteins', models.FloatField(default=0, verbose_name='Белки (г)')),
                ('fats', models.FloatField(default=0, verbose_name='Жиры (г)')),
                ('carbohydrates', models.FloatField(default=0, verbose_name='Углеводы (г)')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступна для заказа')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'шаурма',
                'verbose_name_plural': 'шаурма',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ShaurmaCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('description', models.TextField(max_length=200, verbose_name='Описание')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок сортировки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'категория шаурмы',
                'verbose_name_plural': 'категории шаурмы',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=60, unique=True, verbose_name='Никнейм')),
                ('picture', models.ImageField(upload_to='user_images', verbose_name='Изображение')),
                ('email', models.EmailField(max_length=80, verbose_name='Email')),
                ('number', models.CharField(max_length=12, verbose_name='Номер')),
                ('last_address', models.CharField(max_length=200, verbose_name='Адрес последней доставки')),
                ('reg_date', models.DateTimeField(auto_now_add=True, verbose_name='время регистрации')),
                ('is_open', models.BooleanField(default=True, verbose_name='Открытый профиль?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Профиль активен?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Это сотрудник сайта?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
                'ordering': ['username'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Имя')),
                ('text', models.TextField(max_length=600, verbose_name='Текст отзыва')),
                ('stars', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Время записи')),
                ('shaurma', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.shaurma', verbose_name='Шаурма')),
            ],
            options={
                'verbose_name': 'отзыв',
                'verbose_name_plural': 'отзывы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('shaurma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.shaurma', verbose_name='Шаурма')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'заказы',
            },
        ),
        migrations.AddField(
            model_name='shaurma',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.shaurmacategory', verbose_name='Категория'),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Название')),
                ('short_text', models.CharField(blank=True, max_length=150, verbose_name='Краткое описание')),
                ('description', models.TextField(blank=True, max_length=1000, verbose_name='Описание')),
                ('condition', models.TextField(blank=True, max_length=1000, verbose_name='Условия акции')),
                ('image', models.ImageField(upload_to='stocks', verbose_name='Изображение')),
                ('discount', models.SmallIntegerField(verbose_name='Скидка в %')),
                ('date_start', models.DateField(verbose_name='Старт')),
                ('date_end', models.DateField(verbose_name='Завершение')),
                ('categories', models.ManyToManyField(blank=True, to='main.shaurmacategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'акция',
                'verbose_name_plural': 'акции',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('get_date', models.DateTimeField(auto_now_add=True, verbose_name='Время получения')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.achievement', verbose_name='Достижение')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'достижение пользователя',
                'verbose_name_plural': 'достижения пользователей',
                'ordering': ['get_date'],
            },
        ),
    ]
